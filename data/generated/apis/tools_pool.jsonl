{"name": "newAddress", "description": "Generates a new Ethereum address that can be used to send or receive funds. Do not lose the password! We can't restore access to an address if you lose it.", "parameters": {"type": "dict", "properties": {"password": {"description": "The password for the new Ethereum address", "type": "string"}}, "required": ["password"]}, "required": null}
{"name": "Market Trends API", "description": "Get the latest market trends and relevant news for a specified country and language.", "parameters": {"type": "dict", "properties": {"trend_type": {"description": "Trend type.", "type": "string", "enum": ["MARKET_INDEXES", "MOST_ACTIVE", "GAINERS", "LOSERS", "CRYPTO", "CURRENCIES", "CLIMATE_LEADERS"]}, "country": {"description": "The country for which to get trends, specified as a 2-letter country code - see ISO 3166.", "type": "string", "default": "us"}, "language": {"description": "The language to use for the results, specified as a 2-letter language code - see ISO 639-1.", "type": "string", "default": "en"}}, "required": ["trend_type"]}, "required": null}
{"name": "Get Futures Prices", "description": "Retrieve a list of current futures prices for various financial instruments.", "parameters": {"type": "dict", "properties": {"instrument_type": {"description": "Type of financial instrument (e.g., commodity, currency, index)", "type": "string"}, "exchange": {"description": "Name of the exchange (e.g., CME, ICE, NYMEX)", "type": "string"}, "start_string": {"description": "Start string for the price data (YYYY-MM-DD)", "type": "string"}, "end_string": {"description": "End string for the price data (YYYY-MM-DD)", "type": "string"}}, "required": ["instrument_type", "exchange"]}, "required": null}
{"name": "SEC Filings", "description": "Returns a list of SEC Filings for the requested company, including filing types, strings, and documents.", "parameters": {"type": "dict", "properties": {"identifier": {"description": "Publicly traded company's stock symbol or Central Index Key (CIK)", "type": "string", "default": "aapl"}}, "required": ["identifier"]}, "required": null}
{"name": "United States Away from Home Mobility API", "description": "Retrieve daily data on the percentage change in time spent away from home in the United States, providing insights into the economic impact of the COVID-19 pandemic.", "parameters": {"type": "dict", "properties": {"string": {"description": "The string for which to retrieve data (format: YYYY-MM-DD)", "type": "string"}, "state": {"description": "The state for which to retrieve data (optional, default: all states)", "type": "string"}}, "required": ["string"]}, "required": null}
{"name": "Calculate Sales Tax", "description": "Retrieves the sales tax rate applicable to a specific address. This API accepts address inputs to deliver up-to-string, relevant local sales tax rates instantly.", "parameters": {"type": "dict", "properties": {"country": {"description": "Set to one of the country codes listed in Supported Countries.", "type": "string", "default": "US"}, "city": {"description": "City name", "type": "string", "default": "Meridian"}, "zip": {"description": "Zip code", "type": "string", "default": "83646"}, "street": {"description": "Street address", "type": "string", "default": "936 Storey Ave"}}, "required": ["country"]}, "required": null}
{"name": "Quotes by Keywords", "description": "Returns a list of quotes containing the specified keyword.", "parameters": {"type": "dict", "properties": {"word": {"description": "The keyword to search for in quotes.", "type": "string"}}, "required": ["word"]}, "required": null}
{"name": "Get Zip Code Information", "description": "Retrieve information about a specific zip code in the United States.", "parameters": {"type": "dict", "properties": {"country": {"description": "The country code (default: 'us')", "type": "string"}, "postal_code": {"description": "The zip code (default: '90210')", "type": "string"}}, "required": ["country", "postal_code"]}, "required": null}
{"name": "Weekly Hot 100 Chart", "description": "Retrieve the Billboard Hot 100 chart for a specific string.", "parameters": {"type": "dict", "properties": {"string": {"description": "The string for which to retrieve the chart (YYYY-MM-DD)", "type": "string"}}, "required": ["string"]}, "required": null}
{"name": "Get Cars Information", "description": "This API returns a list of cars information based on the provided parameters.", "parameters": {"type": "dict", "properties": {"model": {"description": "The model of the vehicle.", "type": "string"}, "make": {"description": "The manufacturer of the vehicle.", "type": "string"}, "year": {"description": "The model year of the vehicle.", "type": "string"}, "fuel_type": {"description": "The type of fuel used.", "type": "string"}, "drive": {"description": "The drive transmission type.", "type": "string"}, "transmission": {"description": "The type of transmission.", "type": "string"}, "cylinders": {"description": "The number of cylinders.", "type": "float"}, "min_city_mpg": {"description": "Minimum city fuel efficiency in miles per gallon.", "type": "float"}, "max_city_mpg": {"description": "Maximum city fuel efficiency in miles per gallon.", "type": "float"}, "min_hwy_mpg": {"description": "Minimum highway fuel efficiency in miles per gallon.", "type": "float"}, "max_hwy_mpg": {"description": "Maximum highway fuel efficiency in miles per gallon.", "type": "float"}, "min_comb_mpg": {"description": "Minimum combination (city + highway) fuel efficiency in miles per gallon.", "type": "float"}, "max_comb_mpg": {"description": "Maximum combination (city + highway) fuel efficiency in miles per gallon.", "type": "float"}, "limit": {"description": "How many results to return.", "type": "string"}}, "required": []}, "required": null}
{"name": "Lorem Ipsum Generator", "description": "Generate a specified number of words of Lorem Ipsum text", "parameters": {"type": "dict", "properties": {"amount": {"description": "The number of words to generate", "type": "int"}}, "required": ["amount"]}, "required": null}
{"name": "Crawl", "description": "Perform a Google search and return the HTML source of the results page.", "parameters": {"type": "dict", "properties": {"query": {"description": "The search query to perform.", "type": "string"}}, "required": ["query"]}, "required": null}
{"name": "GetCompetitions", "description": "Retrieve a list of football competitions that are televised in Peru.", "parameters": {"type": "dict", "properties": {}, "required": []}, "required": null}
{"name": "Get Manager Placeholder Image", "description": "Retrieve the manager placeholder image in PNG format for a specific sport.", "parameters": {"type": "dict", "properties": {"sport": {"description": "The name of the sport for which the manager placeholder image is required.", "type": "string"}}, "required": ["sport"]}, "required": null}
{"name": "Search Competition API", "description": "Search for competitions in the sports domain", "parameters": {"type": "dict", "properties": {"name": {"description": "The name of the competition to search for", "type": "string"}}, "required": ["name"]}, "required": null}
{"name": "Get Category Image", "description": "Retrieve a category image for a specific sport or league.", "parameters": {"type": "dict", "properties": {"slug": {"description": "Slug of the sport or league, e.g. `france` `champions-league` `intl`.", "type": "string", "default": "france"}}, "required": ["slug"]}, "required": null}
{"name": "GetFutureEvents", "description": "Retrieve a list of future Azure events, such as maintenance windows, upstrings, or other scheduled events.", "parameters": {"type": "dict", "properties": {"page": {"description": "The page number to retrieve (default: 1)", "type": "int"}}, "required": ["page"]}, "required": null}
{"name": "Get Languages for Country", "description": "Get a list of valid languages for a given country code.", "parameters": {"type": "dict", "properties": {"country": {"description": "Country code of the country to get languages for. See [all available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).", "type": "string", "default": "US"}}, "required": ["country"]}, "required": null}
{"name": "Get All Dog Breeds", "description": "This endpoint returns a list of all available dog breeds, along with their relevant information.", "parameters": {"type": "dict", "properties": {}, "required": []}, "required": null}
{"name": "Get LinkedIn Prostring by Sales Nav URL", "description": "Retrieves a LinkedIn user's prostring data, including experience, education history, skills, and company-related details, given their Sales Navigator URL.", "parameters": {"type": "dict", "properties": {"linkedin_url": {"description": "The LinkedIn Sales Navigator URL of the user to retrieve prostring data for.", "type": "string"}}, "required": ["linkedin_url"]}, "required": null}
{"name": "Get Companies by SIC Code", "description": "Retrieve a list of the top 100 companies that are related to a given SIC code.", "parameters": {"type": "dict", "properties": {"sic_code": {"description": "SIC code to lookup.", "type": "int"}}, "required": ["sic_code"]}, "required": null}
{"name": "Search Strong's Number API", "description": "Returns every verse containing the supplied Strong's number. Include LXX boolean option allows searching the Septuagint translation of the Old Testament when searching for a Greek word, enabling connections between New Testament words and Old Testament concepts.", "parameters": {"type": "dict", "properties": {"include-lxx": {"description": "Include LXX translation in search results (true/false)", "type": "boolean", "default": true}, "strongs-number": {"description": "The Strong's number to search for", "type": "string"}}, "required": ["include-lxx", "strongs-number"]}, "required": null}
{"name": "Get Synthesize", "description": "Synthesizes the provided text and returns the corresponding audio URL.", "parameters": {"type": "dict", "properties": {"text": {"description": "The text to be synthesized", "type": "string"}}, "required": ["text"]}, "required": null}
{"name": "Get Big Five Personality Test Questionnaire", "description": "Retrieve the Big Five Personality Test Questionnaire for personality analysis", "parameters": {"type": "dict", "properties": {}, "required": []}, "required": null}
{"name": "Detect Language", "description": "Detect the language of a given text with a confidence score", "parameters": {"type": "dict", "properties": {"text": {"description": "The text to be analyzed for language detection", "type": "string"}, "detectedcount": {"description": "The number of languages to detect (default: 5)", "type": "float", "default": 5.0}}, "required": ["text"]}, "required": null}
{"name": "/madlibs-diceware", "description": "Generate a password using madlibs diceware. This API generates a password with a specified number of phrases, each consisting of an adverb, an adjective, and a noun.", "parameters": {"type": "dict", "properties": {"nphrase": {"description": "The number of phrases in the generated password. Accepted values are 1 and 2.", "type": "int"}}, "required": ["nphrase"]}, "required": null}
{"name": "DISC Personality Test Questionnaire", "description": "This API returns all questions for the DISC Personality Test, a widely used framework for understanding individual personalities and behaviors.", "parameters": {"type": "dict", "properties": {"language": {"description": "The language of the questionnaire (e.g., English, Spanish, French)", "type": "string"}, "question_type": {"description": "The type of question to return (e.g., multiple-choice, open-ended)", "type": "string"}}, "required": ["language"]}, "required": null}
{"name": "Trending Videos", "description": "Retrieves a list of trending videos from YouTube, filtered by locale, country, and type.", "parameters": {"type": "dict", "properties": {"hl": {"description": "Locale/language for the request", "type": "string", "default": "en"}, "gl": {"description": "Country to get trending videos from", "type": "string", "default": "US"}, "type": {"description": "Type of trending videos", "type": "string", "default": "mu"}}, "required": []}, "required": null}
{"name": "Get All Characters", "description": "Retrieve a list of characters from the Throne of Glass series.", "parameters": {"type": "dict", "properties": {"limit": {"description": "The maximum number of characters to return", "type": "int"}, "skip": {"description": "The number of characters to skip before returning the results", "type": "int"}}, "required": []}, "required": null}
{"name": "Get EuroMillions Draw Results", "description": "Retrieve the draw results for a specific string from the EuroMillions lottery", "parameters": {"type": "dict", "properties": {"string": {"description": "The string for which you want to retrieve the draw results", "type": "string", "format": "string"}}, "required": ["string"]}, "required": null}